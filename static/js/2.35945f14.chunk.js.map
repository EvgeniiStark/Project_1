{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/cat.jpg","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddmessageForm/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","messages","active","message","__webpack_require__","p","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","react_router_dom","to","name","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","isAuth","src","avatar1","AddmessageForm_AddMessageForm","values","sendMessage","newMessageBody","react_router","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,SAAA,0BAAAC,OAAA,wBAAAC,QAAA,+CCDlBN,EAAAC,QAAiBM,EAAAC,EAAuB,uHCWzBC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEZ,QACtCQ,EAAAC,EAAAC,cAACI,EAAA,EAAO,CAACC,GAAIT,GAAOD,EAAMW,QCAnBC,EAJC,SAACZ,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMJ,qECCtCiB,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAM,2BAAjBD,CAdQ,SAACf,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMY,SAAUjB,EAAMkB,cACdf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAA,EAAK,CAAEC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBF,KAAK,iBACLa,YAAc,wBAE1BrB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,cAAQ,YCuBdoB,EA9BC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMlC,QAAQqC,IAAI,SAAAC,GAAC,OAAI3B,EAAAC,EAAAC,cAAC0B,EAAU,CAACpB,KAAMmB,EAAEnB,KAAMqB,IAAMF,EAAE5B,GAAIA,GAAI4B,EAAE5B,OACrF+B,EAAmBP,EAAMhC,SAASmC,IAAI,SAAAK,GAAC,OAAI/B,EAAAC,EAAAC,cAAC8B,EAAO,CAACvC,QAASsC,EAAEtC,QAASoC,IAAME,EAAEhC,OAMpF,OAAKF,EAAMoC,OAIPjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,SACdW,EAAAC,EAAAC,cAAA,OAAKgC,IAAKC,MACVnC,EAAAC,EAAAC,cAAA,UAAI,aACJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,cACbmC,GAELzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,UACdS,EAAAC,EAAAC,cAAA,WAAM4B,IAEV9B,EAAAC,EAAAC,cAACkC,EAAc,CAACtB,SAjBJ,SAACuB,GACjBxC,EAAMyC,YAAYD,EAAOE,oBAGHvC,EAAAC,EAAAC,cAACsC,EAAA,EAAQ,CAACjC,GAAI,qEChBxCkC,EAA6B,SAAClB,GAAK,MAAM,CACzCU,OAAQV,EAAMmB,KAAKT,gBCeRU,sBACXC,YAfkB,SAACrB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAIF,SAACqB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,QDPR,SAACQ,GAAc,IACrCC,EAAiB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAIlB,OAJkBN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAnB,IAAA,SAAA8B,MAAA,WAEf,OAAKP,KAAKvD,MAAMoC,OACZjC,EAAAC,EAAAC,cAAC6C,EAAcK,KAAKvD,OADOG,EAAAC,EAAAC,cAACsC,EAAA,EAAQ,CAACjC,GAAI,eAEhDyC,EAJkB,CAASY,IAAMb,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,ICI9DL,CAGZrB","file":"static/js/2.35945f14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3d29I\",\"dialogsItems\":\"Dialogs_dialogsItems__3yKws\",\"messages\":\"Dialogs_messages__1zBFL\",\"active\":\"Dialogs_active__zISU_\",\"message\":\"Dialogs_message__1k9_I\"};","module.exports = __webpack_public_path__ + \"static/media/cat.57a0bbff.jpg\";","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field  component={Textarea}\r\n                            validate={[required, maxLength50]}\r\n                            name='newMessageBody' \r\n                            placeholder = 'Enter your message'/>\r\n                </div>\r\n                <div><button>Send</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'}) (AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport avatar1 from './cat.jpg';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AddMessageForm from '../Dialogs/AddmessageForm/AddMessageForm'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key ={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key ={m.id}/>);\r\n    \r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    } \r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>;\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <img src={avatar1} />\r\n            <h3>Dorabotka</h3>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n\t        return <Component {...this.props} />\r\n        }\r\n    }\r\n   \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../Redux/dialogs-reducer';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n} \r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n} \r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);\r\n\r\n"],"sourceRoot":""}